apply plugin: 'groovy'
apply plugin: 'application'

mainClassName = "com.dancorder.PhotoSync.PhotoSync"

// Use local copies of dependencies first, then get from Maven if needed
repositories {
    flatDir {
        dirs 'lib', 'libTest'
    }
    mavenCentral()
}

dependencies {
    compile     'commons-codec:commons-codec:1.9',
                'commons-cli:commons-cli:1.2'
    testCompile 'junit:junit:4.10',
                'org.codehaus.groovy:groovy-all:2.0.5',
                'org.spockframework:spock-core:0.7-groovy-2.0',
                'cglib:cglib-nodep:2.2.2',
                'org.objenesis:objenesis:2.1'
}

// Copy dependencies into the git repository
task copyToLib(type: Copy) {
    into "lib"
    from configurations.runtime
}

task copyToTestLib(type: Copy) {
    into "libTest"
    from configurations.testRuntime
}

jar.dependsOn copyToLib
test.dependsOn copyToTestLib

jar {
    // Pull all dependencies into one jar
    doFirst {
        from (configurations.runtime.resolve().collect { it.isDirectory() ? it : zipTree(it) })
    }
    manifest {
        attributes(
            "Main-Class": mainClassName,
            "Implementation-Version": getVersionTag())
    }
}

def getVersionTag() {
    def os = System.getProperty("os.name").toLowerCase()
    def gitCommand = os.contains("windows") ? 'git.cmd' : 'git'
    def stdout = new ByteArrayOutputStream()

    exec {
        commandLine gitCommand, 'describe', '--match', 'v*.*.*'
        standardOutput = stdout
    }

    return stdout.toString().trim()
}
